{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled4.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python2",
      "display_name": "Python 2"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Birumandal/Datascience/blob/master/Module_5/DB\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "anQVX44M9ays",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 170
        },
        "outputId": "4628f6c6-8b76-4819-b8c3-629991f5ce63"
      },
      "source": [
        "!pip install ibm_db"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting ibm_db\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/98/cb/f77d9bd5f64246074af364cc30e20e3044c533890f3b67d30e89615c2fc5/ibm_db-3.0.1.tar.gz (642kB)\n",
            "\u001b[K     |████████████████████████████████| 645kB 5.2MB/s \n",
            "\u001b[?25hBuilding wheels for collected packages: ibm-db\n",
            "  Building wheel for ibm-db (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Stored in directory: /root/.cache/pip/wheels/10/3f/74/c274ef3f7afab9b16fbfbd7814eccc229992a91151a13d91c9\n",
            "Successfully built ibm-db\n",
            "Installing collected packages: ibm-db\n",
            "Successfully installed ibm-db-3.0.1\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kqTy0h65EauH",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 71
        },
        "outputId": "aabb1e55-6ba5-4107-cebb-20bd908f533e"
      },
      "source": [
        "import ibm_db\n",
        "\n",
        "\n",
        "#Replace the placeholder values with your actual Db2 hostname, username, and password:\n",
        "dsn_hostname = \"ys1-dashdb-small-01-lon02.services.eu-gb.bluemix.net\" # e.g.: \"dashdb-txn-sbox-yp-dal09-04.services.dal.bluemix.net\"\n",
        "dsn_uid = \"dash108246\"        # e.g. \"abc12345\"\n",
        "dsn_pwd = \"r_MBUv9q7_vY\"      # e.g. \"7dBZ3wWt9XN6$o0J\"\n",
        "\n",
        "dsn_driver = \"{IBM DB2 ODBC DRIVER}\"\n",
        "dsn_database = \"BLUDB\"            # e.g. \"BLUDB\"\n",
        "dsn_port = \"50000\"                # e.g. \"50000\" \n",
        "dsn_protocol = \"TCPIP\"            # i.e. \"TCPIP\"\n",
        "\n",
        "\n",
        "print(dsn_driver)\n",
        "\n",
        "\n",
        "\n",
        "#Create database connection\n",
        "#DO NOT MODIFY THIS cell.Just run it with Shift+Enter\n",
        "dsn= (\n",
        "     \"DRIVER={0};\"\n",
        "     \"DATABASE={1};\"\n",
        "     \"HOSTNAME={2};\"\n",
        "     \"PORT={3};\"\n",
        "     \"PROTOCOL={4};\"\n",
        "     \"UID={5};\"\n",
        "     \"PWD={6};\"\n",
        "     ).format(dsn_driver, dsn_database, dsn_hostname,dsn_port, dsn_protocol, dsn_uid, dsn_pwd)\n",
        "try:\n",
        "  conn=ibm_db.connect(dsn, \"\", \"\")\n",
        "  print{\"Connected to database:\",dsn_database, \"as user:\",dsn_uid, \"on host\",dsn_hostname}  \n",
        "except:\n",
        "    print (\"Unable to connect: \", ibm_db.conn_errormsg() )"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{IBM DB2 ODBC DRIVER}\n",
            "('Unable to connect: ', '[IBM][CLI Driver] SQL30081N  A communication error has been detected. Communication protocol being used: \"TCP/IP\".  Communication API being used: \"SOCKETS\".  Location where the error was detected: \"5.10.110.175\".  Communication function detecting the error: \"connect\".  Protocol specific error code(s): \"110\", \"*\", \"*\".  SQLSTATE=08001 SQLCODE=-30081')\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}